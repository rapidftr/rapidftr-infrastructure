# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = '2'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = 'ubuntu/trusty64'

  config.vm.define "linux-dev", primary: true do |dev|
    dev.vm.provision :shell, privileged: true, inline: <<-SCRIPT
      apt-get update
      wget -qO- https://get.docker.io/ | sh

      cd /vagrant
      mkdir -p artifacts artifacts/apt

      docker pull rapidftr/rapidftr:latest
      (docker rm -f rapidftr || echo) >/dev/null 2>&1
      docker run --entrypoint /bin/echo --name rapidftr rapidftr/rapidftr:latest
      docker export rapidftr | gzip -c > artifacts/rapidftr-image.tar.gz

      cp /var/cache/apt/archives/*.deb artifacts/apt/
      cp install.sh artifacts/
      cp rapidftr.sh artifacts/
    SCRIPT
  end

  config.vm.define "linux-test", autostart: false do |test|
    test.vm.provider :virtualbox do |vb|
        vb.name = "winrapidftr"
        vb.cpus = 1
        vb.memory = 1024
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
    end

    test.vm.network :forwarded_port, host: 8443, guest: 443
    test.vm.network :forwarded_port, host: 8080, guest: 80
    test.vm.network :forwarded_port, host: 6984, guest: 6984

    test.vm.provision :shell, privileged: true, inline: <<-SCRIPT

      # Simulate offline
      echo "nameserver 127.0.0.1" > /etc/resolv.conf
      cd /vagrant/artifacts
      ./install.sh
    SCRIPT
  end

  config.vm.define "linux-windows-installer", autostart: false do |installer|

    installer.vm.provision :shell, privileged: true, inline: <<-SCRIPT
      apt-get update
      apt-get -y install scons g++ zlib1g-dev unzip nsis

      makensis /vagrant/windows/installer.nsi
    SCRIPT
  end

  config.vm.define "linux-rapidreg-dev", autostart: false do |dev|
    dev.vm.provision :shell, privileged: true, inline: <<-SCRIPT
      apt-get update
      apt-get update
      wget -qO- https://get.docker.io/ | sh

      cd /vagrant
      mkdir -p artifacts artifacts/rapidreg/apt

      docker pull rapidreg/rapidreg:latest
      (docker rm -f rapidreg || echo) >/dev/null 2>&1
      docker run --entrypoint /bin/echo --name rapidreg rapidreg/rapidreg:latest
      docker export rapidreg | gzip -c > artifacts/rapidreg/rapidreg-image.tar.gz

      cp /var/cache/apt/archives/*.deb artifacts/rapidreg/apt
      cp rapidreg-install.sh artifacts/rapidreg/
      cp rapidreg.sh artifacts/rapidreg/
    SCRIPT
  end

  config.vm.define "linux-rapidreg-test", autostart: false do |test|
    test.vm.provider :virtualbox do |vb|
        vb.name = "winrapidreg"
        vb.cpus = 1
        vb.memory = 1024
        vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
    end

    test.vm.network :forwarded_port, host: 8443, guest: 443
    test.vm.network :forwarded_port, host: 8080, guest: 80
    test.vm.network :forwarded_port, host: 6984, guest: 6984

    test.vm.provision :shell, privileged: true, inline: <<-SCRIPT
      #Simulate offline
      echo "nameserver 127.0.0.1" > /etc/resolv.conf
      cd /vagrant/artifacts/rapidreg
      ./rapidreg-install.sh
    SCRIPT
  end

  config.vm.define "linux-rapidregwindows-installer", autostart: false do |installer|

    installer.vm.provision :shell, privileged: true, inline: <<-SCRIPT
      apt-get update
      apt-get -y install scons g++ zlib1g-dev unzip nsis

      makensis /vagrant/windows/rapidreg_installer.nsi
    SCRIPT
  end
end
